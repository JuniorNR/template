name: CI/CD pipeline for Next.js
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: | 
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Cache application build
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-cache-

      # - name: Install commitlint
      #   run: pnpm install -D @commitlint/cli @commitlint/config-conventional
      - name: Print versions
        run: |
          git --version
          node --version
          pnpm --version
          # npx commitlint --version

      # - name: Validate current commit (last commit) with commitlint
      #   if: github.event_name == 'push'
      #   run: npx commitlint --last --verbose

      # - name: Validate PR commits with commitlint
      #   if: github.event_name == 'pull_request'
      #   run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: install dependencies
        run: pnpm install --frozen-lockfile

      - name: linting typescript
        run: pnpm lint:ts

      - name: linting scss
        run: pnpm lint:scss

      - name: unit testing
        run: pnpm unit
        
      - name: build project
        run: pnpm build