name: CI pipeline
on: [push, pull_request]
jobs:
  setup-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: pnpm
      - name: Get pnpm store directory
        id: pnpm-store
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        id: pnpm-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-store.outputs.STORE_PATH }}
            node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-
      - name: Cache application build
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: nextjs-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nextjs-${{ runner.os }}-
      - name: Print versions
        run: |
          git --version
          node --version
          pnpm --version

      - name: linting typescript
        run: pnpm lint:ts
      - name: linting scss
        run: pnpm lint:scss

      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright
        run: pnpm exec playwright install --with-deps

      - name: Build application
        run: pnpm build:app
        
      - name: Build Storybook
        run: pnpm build:sb

      - name: Upload artifacts application
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ./artifacts/app-build

      - name: Upload storybook application
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: ./artifacts/storybook-build

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*-build'
          merge-multiple: true

      - name: Start application server
        run: |
          pnpm exec serve artifacts/app-build -l 3000 &
          echo "APP_SERVER_PID=$!" >> $GITHUB_ENV
          pnpm exec wait-on http://localhost:3000
          
      - name: Start Storybook server
        run: |
          pnpm exec serve artifacts/storybook-build -l 6006 &
          echo "STORYBOOK_SERVER_PID=$!" >> $GITHUB_ENV
          pnpm exec wait-on http://localhost:6006

      - name: Run Playwright tests
        run: pnpm test:endToEnd
        env:
          APP_URL: http://localhost:3000
          STORYBOOK_URL: http://localhost:6006

      - name: Stop servers
        if: always()
        run: |
          kill $APP_SERVER_PID || true
          kill $STORYBOOK_SERVER_PID || true