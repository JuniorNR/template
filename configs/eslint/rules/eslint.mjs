export const eslintRules = {
  'no-console': 'warn',
  'array-callback-return': 'error',
  'no-await-in-loop': 'warn',
  'no-inner-declarations': 'error',
  'no-promise-executor-return': 'error',
  'no-self-compare': 'error',
  'no-useless-assignment': 'off',
  'block-scoped-var': 'error',
  'class-methods-use-this': 'error',
  'default-case': 'error',
  'default-case-last': 'error',
  'default-param-last': 'error',
  'func-name-matching': 'error',
  'func-names': 'error',
  'new-cap': 'error',
  'no-alert': 'error',
  'no-array-constructor': 'error',
  'no-bitwise': 'error',
  'no-caller': 'error',
  'no-empty-function': 'error',
  'no-eq-null': 'error',
  'no-extra-bind': 'error',
  'no-implied-eval': 'error',
  'no-lone-blocks': 'error',
  'no-loop-func': 'error',
  'no-param-reassign': 'error',
  'no-magic-numbers': [
    'error',
    {
      ignoreArrayIndexes: true,
      ignoreDefaultValues: true,
      ignoreClassFieldInitialValues: true,
      enforceConst: true,
      ignore: [
        -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
        100, 101, 102, 103, 200, 201, 202, 300, 301, 302, 303, 400, 401, 402,
        403, 404, 500, 501, 502, 503, 504, 3001,
      ],
    },
  ],
  'no-implicit-coercion': ['error', { allow: ['!!'] }],
  'no-else-return': ['error', { allowElseIf: false }],
  'max-depth': ['error', 5],
  'max-nested-callbacks': ['error', 3],
  'max-params': ['error', 5],
  'max-lines': [
    'error',
    {
      max: 300,
      skipBlankLines: true,
      skipComments: true,
    },
  ],
  'max-lines-per-function': [
    'warn',
    {
      max: 150,
      skipBlankLines: true,
      skipComments: true,
    },
  ],
  'logical-assignment-operators': ['error', 'never'],
  'max-classes-per-file': ['error', 1],
  'id-denylist': [
    'error',
    'res',
    'err',
    'e',
    'cb',
    'cur',
    'acc',
    'el',
    'elem',
    'val',
  ],
  'id-length': ['error', { min: 1 }],
  'func-style': ['error', 'expression'],
  complexity: ['error', 10],
  curly: ['error', 'multi-line'],
  eqeqeq: ['error', 'always'],
  camelcase: ['error', { properties: 'never' }],
  'no-multi-str': 'warn',
  'no-nested-ternary': 'warn',
  'no-negated-condition': 'warn',
  'no-eval': 'warn',
  'no-template-curly-in-string': 'warn',
  'no-unmodified-loop-condition': 'warn',
  'no-unreachable-loop': 'warn',
  'accessor-pairs': 'warn',
};
